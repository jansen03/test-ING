{"version":3,"file":"my-element.js","sourceRoot":"","sources":["src/my-element.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAwD1D,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAAzC;;QAmCE,SAAI,GAAW,QAAQ,CAAC;QAGxB,cAAS,GAAG,EAAgB,CAAC;QAG7B,iBAAY,GAAG,UAAU,GAAW;YAClC,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;YAC7B,IAAI,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;YACnD,OAAO,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC;IAoCJ,CAAC;IAlCU,MAAM;QACb,OAAO,IAAI,CAAA;;wBAES,IAAI,CAAC,UAAU;;;UAG7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5B,OAAO,IAAI,CAAA;;;yBAGI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;;;yBAG5C,IAAI,CAAC,IAAI,CAAC,IAAI;oCACH,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;yDACH,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,CAAC,CAAC,EAAE;;iBAE/G,CAAA;QACT,CAAC,CAAC;;KAEL,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,KAAY;QACrB,MAAM,KAAK,GAAG,KAAK,CAAC,MAA0B,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;QACxB,KAAK,CAAC,yCAAyC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC5E,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAe,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACpB,CAAC,CAAC,CAAA;IACJ,CAAC;CACF,CAAA;AAhFiB,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+B5B,CAAA;AAGA;IADC,QAAQ,EAAE;uCACa;AAGxB;IADC,QAAQ,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;4CACA;AAtClB,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CAiFrB;SAjFY,SAAS","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\ninterface ListData {\r\n  score: Number;\r\n  show: {\r\n    averageRuntime: Number;\r\n    dvdCountry: string | null;\r\n    ended: string| null;\r\n    externals: {\r\n      imdb: string;\r\n      thetvdb: 417772\r\n      tvrage: null\r\n    }\r\n    genres: string[];\r\n    id: Number;\r\n    image: {\r\n      medium: string;\r\n      original: string;\r\n    }\r\n    language: string;\r\n    name: string;\r\n    network: string | null\r\n    officialSite: string |null\r\n    premiered: string;\r\n    rating: {\r\n      average: Number;\r\n    }\r\n    runtime: string | null;\r\n    schedule: {\r\n      days: string[];\r\n    }\r\n    status: string;\r\n    summary: string;\r\n    type: string;\r\n    updated: Number;\r\n    url: string;\r\n    webChannel: {\r\n      country: string | null;\r\n      id: Number;\r\n      name:string;\r\n      officialSite: string;\r\n    }\r\n    weight: Number;\r\n    _links: {\r\n      nextepisode: {\r\n        href: string;\r\n      }\r\n      self: {\r\n        href: string;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n@customElement('my-element')\r\nexport class MyElement extends LitElement {\r\n  static override styles = css`\r\n  .input-div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n\r\n  }\r\n  .show-main-div {\r\n    border: 1px solid black;\r\n    display: flex;\r\n    margin: 50px;\r\n    height: 300px;\r\n    width:40%;\r\n    flex: 1;\r\n  }\r\n  .show-details {\r\n    margin: 10px;\r\n  }\r\n  .main-container {\r\n    display: flex\r\n    overflow: none;\r\n  }\r\n  .poster {\r\n    height: 300px;\r\n  }\r\n  .show-description {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    max-height: 180px\r\n  }\r\n`;\r\n\r\n  @property()\r\n  name: string = 'Jansen';\r\n\r\n  @property({attribute: false})\r\n  listItems = [] as ListData[];\r\n\r\n\r\n  stringToHTML = function (str: string) {\r\n    var parser = new DOMParser();\r\n    var doc = parser.parseFromString(str, 'text/html');\r\n    return doc.body;\r\n  };\r\n\r\n  override render() {\r\n    return html`\r\n      <div class=input-div>\r\n        <input @input=${this.changeName} placeholder=\"Search Show\">\r\n      </div>\r\n      <div class=main-container>\r\n        ${this.listItems.map((show) => {\r\n          return html`\r\n          <div class=show-main-div>\r\n            <div>\r\n              <img src=${show.show.image.medium} alt=${show.show.name} class=poster>\r\n            </div>\r\n            <div class=show-details>\r\n              <div><h1>${show.show.name}</h1></div>\r\n              <div><label>Rating: ${show.show.rating.average}</label></div>\r\n              <div class=show-description>Description: ${show.show.summary !== \"null\" ? this.stringToHTML(show.show.summary): ''}</div>\r\n            </div>\r\n          </div>`\r\n        })}\r\n     </div>\r\n    `;\r\n  }\r\n\r\n  changeName(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    this.name = input.value;\r\n    fetch(`https://api.tvmaze.com/search/shows?q=${input.value}`).then(response => {\r\n      return response.json();\r\n    }).then((data:ListData[]) => {\r\n        this.listItems = data;\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'my-element': MyElement;\r\n  }\r\n}\r\n"]}